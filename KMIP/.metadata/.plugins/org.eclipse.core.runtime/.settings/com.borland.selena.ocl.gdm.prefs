#Wed Mar 06 12:28:22 CET 2013
AuditsRegistry/auditSet0/audit27/invariant=oclIsKindOf(uml20\:\:statemachines\:\:ConnectionPointReference) or \n(oclIsKindOf(uml20\:\:statemachines\:\:PseudoState) and \n (oclAsType(uml20\:\:statemachines\:\:PseudoState).kind \= uml20\:\:statemachines\:\:PseudoStateKind\:\:ENTRY_POINT or\n  oclAsType(uml20\:\:statemachines\:\:PseudoState).kind \= uml20\:\:statemachines\:\:PseudoStateKind\:\:EXIT_POINT)) or \nowner.oclIsKindOf(uml20\:\:statemachines\:\:Region) 
AuditsRegistry/auditSet0/audit7/description=Indicate Role Name on Association Ends
AuditsRegistry/auditSet0/audit42/name=SSSNHR
AuditsRegistry/auditSet0/audit62/context=uml20\:\:kernel\:\:features\:\:Operation
AuditsRegistry/auditSet0/audit1/description=Always Indicate Multiplicity
MetricsRegistry/auditSet0/metric7/tooltip=
MetricsRegistry/auditSet0/metric1/name=NOOO
AuditsRegistry/auditSet0/audit1/context=uml20\:\:kernel\:\:KernelAssociation
MetricsRegistry/auditSet0/metric4/tooltip=
AuditsRegistry/auditSet0/audit32/invariant=kind \= uml20\:\:statemachines\:\:PseudoStateKind\:\:JOIN implies\n outTransitions()->size()\=1
AuditsRegistry/auditSet0/audit9/name=AUD
AuditsRegistry/auditSet0/audit56/severity=severity.warning
MetricsRegistry/auditSet0/metric8/language=ocl
AuditsRegistry/auditSet0/audit57/description=A use case cannot include use cases that directly or indirectly include it
AuditsRegistry/auditSet0/audit58/context=uml20\:\:kernel\:\:Classifier
AuditsRegistry/auditSet0/audit51/description=If an element that is owned by a package has visibility, it is public or private.
AuditsRegistry/auditSet0/audit53/language=ocl
AuditsRegistry/auditSet0/audit51/severity=severity.warning
AuditsRegistry/auditSet0/audit37/invariant=(not (operations->isEmpty() and attributes->isEmpty())) and \n operations->forAll(o | o.abstract) and \n attributes->forAll(a | a.static and a.leaf) implies \n interface
AuditsRegistry/auditSet0/audit55/context=uml20\:\:usecases\:\:Actor
AuditsRegistry/auditSet0/audit8/description=Indicate Role Name on n-ary Association Ends
AuditsRegistry/auditSet0/audit8/severity=severity.warning
AuditsRegistry/auditSet0/audit73/tooltip=Checks for the multiple associations with same names and roles between same elements
AuditsRegistry/auditSet0/audit19/language=ocl
AuditsRegistry/auditSet0/audit7/enabled=true
AuditsRegistry/auditSet0/audit65/enabled=true
AuditsRegistry/auditSet0/audit70/tooltip=These characters are not valid part of an identifier for most of the programming languages.
AuditsRegistry/auditSet0/audit4/enabled=true
AuditsRegistry/auditSet0/audit62/enabled=true
MetricsRegistry/auditSet0/metric14/description=Number Of Abstract Classes In The Package
AuditsRegistry/auditSet0/audit42/invariant=submachineState implies regions->isEmpty()
AuditsRegistry/auditSet0/audit5/language=ocl
AuditsRegistry/auditSet0/audit3/severity=severity.warning
MetricsRegistry/auditSet0/metric6/description=Number Of Inherited Operations
MetricsRegistry/auditSet0/metric21/language=ocl
MetricsRegistry/auditSet0/metric4/invariant=-- Uses predefined OCL-based operation \nallClassifierAncestors(Set{self})->size()
AuditsRegistry/auditSet0/audit67/severity=severity.info
AuditsRegistry/auditSet0/audit58/description=Avoid Cyclic Inheritance In Classifiers
MetricsRegistry/auditSet0/metric0/description=Number Of Owned Attributes
MetricsRegistry/auditSet0/metric8/context=uml20\:\:classes\:\:Class
AuditsRegistry/auditSet0/audit69/tooltip=C++ language keywords should not be used as a model elements names.
AuditsRegistry/auditSet0/audit20/tooltip=Many UML modeling tools default to a primitive type assignment. Others may leave a\n<<null>> in place which may prove problematic for generators. It is therefore\nrecommended that type information be provided for all attributes and parameters.\n Frankel, 185
AuditsRegistry/auditSet0/audit12/enabled=true
AuditsRegistry/auditSet0/audit52/description=Slot Must Have Defined Feature
MetricsRegistry/auditSet0/metric5/context=uml20\:\:classes\:\:Class
AuditsRegistry/auditSet0/audit66/tooltip=This audit contains a list of primitive types supported by OCL. All the rest of\nprimitive types should not be used together with OCL constraints referencing them.
AuditsRegistry/auditSet0/audit8/tooltip=Generators will require names on all associations and association ends.\nThose names provided by the modeler are likely to be more \nreadable/useful than those generated.\nFrankel, 186 Ambler \#98
AuditsRegistry/auditSet0/audit58/enabled=true
AuditsRegistry/auditSet0/audit62/description=<<Create>> Operation Return Type Does Not Match Owner's Type
AuditsRegistry/auditSet0/audit29/name=ABHS
AuditsRegistry/auditSet0/audit64/language=ocl
AuditsRegistry/auditSet0/audit62/severity=severity.error
MetricsRegistry/auditSet0/metric12/name=NOCIPR
AuditsRegistry/auditSet0/audit56/name=UCNHATSSU
MetricsRegistry/auditSet0/metric15/description=Abstractness Ratio
AuditsRegistry/auditSet0/audit52/invariant=not definingFeature.oclIsUndefined()
AuditsRegistry/auditSet0/audit28/severity=severity.error
AuditsRegistry/auditSet0/audit31/name=FSHMTOET
AuditsRegistry/auditSet0/audit16/tooltip=Association classes can be decomposed into a separate class that associates\ntwo others.  Association classes are not supported by MOF and may confuse\nsome generators. Some generators may support them, but will likely\ndecompose them anyway.\nFrankel, 159
MetricsRegistry/auditSet0/metric7/description=Number Of Inherited Attributes
AuditsRegistry/auditSet0/audit74/context=uml20\:\:templates\:\:TemplateParameterSubstitution
AuditsRegistry/auditSet0/audit13/language=ocl
AuditsRegistry/auditSet0/audit13/tooltip=The use of generalization between use cases is rare and not commonly \nunderstood. This relationship should be avoided in favor \nof <<include>> and <<extend>>.\nAmbler \#45
AuditsRegistry/auditSet0/audit76/invariant=actualParameters->forAll(ap| formalParameter.ownedParameteredElement.isAssignableFrom(ap))
AuditsRegistry/auditSet0/audit11/severity=severity.info
AuditsRegistry/auditSet0/audit59/description=A use case cannot extend use cases that directly or indirectly extend it
MetricsRegistry/auditSet0/metric1/description=Number Of Owned Operations
AuditsRegistry/auditSet0/audit71/context=uml\:\:together\:\:BinaryLink
AuditsRegistry/auditSet0/audit53/description=One structural feature can be defining feature of at most one slot in an instance specification
AuditsRegistry/auditSet0/audit69/description=Identifier Conflicts with keyword
MetricsRegistry/auditSet0/metric0/lowerLimit=0
AuditsRegistry/auditSet0/audit78/severity=severity.warning
AuditsRegistry/auditSet0/audit81/enabled=true
AuditsRegistry/auditSet0/audit63/description=Interface Association With Not Public Visibility
eclipse.preferences.version=1
AuditsRegistry/auditSet0/audit21/context=uml20\:\:kernel\:\:Property
MetricsRegistry/auditSet0/metric16/description=Nesting Level Of Package
AuditsRegistry/auditSet0/audit62/invariant=stereotypes->includes('create') implies\nreturnResult.oclIsUndefined() or returnResult.type \= owner
AuditsRegistry/auditSet0/audit75/language=ocl
AuditsRegistry/auditSet0/audit67/context=uml20\:\:interaction\:\:Message
AuditsRegistry/auditSet0/audit16/name=AAC
AuditsRegistry/auditSet0/audit9/context=uml\:\:kernel\:\:Element
AuditsRegistry/auditSet0/audit73/severity=severity.error
AuditsRegistry/auditSet0/audit31/enabled=true
MetricsRegistry/auditSet0/metric10/description=Number Of Operation Parameter Types
MetricsRegistry/auditSet0/metric8/description=Number Of Outgoing Associations
AuditsRegistry/auditSet0/audit68/name=AMOOD
AuditsRegistry/auditSet0/audit77/enabled=false
AuditsRegistry/auditSet0/audit39/severity=severity.error
AuditsRegistry/auditSet0/audit43/name=FSMNHGT
MetricsRegistry/auditSet0/metric2/description=Number Of Owned Public Operations
MetricsRegistry/auditSet0/metric12/tooltip=
AuditsRegistry/auditSet0/audit24/language=ocl
AuditsRegistry/auditSet0/audit70/name=ICIC
AuditsRegistry/auditSet0/audit22/severity=severity.warning
MetricsRegistry/auditSet0/metric1/lowerLimit=0
AuditsRegistry/auditSet0/audit70/language=ocl
MetricsRegistry/auditSet0/metric2/name=NOOPO
AuditsRegistry/auditSet0/audit17/context=uml20\:\:classes\:\:Class
AuditsRegistry/auditSet0/audit64/description=Read-Only Field Should Have Init Value
AuditsRegistry/auditSet0/audit27/enabled=true
AuditsRegistry/auditSet0/audit14/context=uml20\:\:kernel\:\:KernelAssociation
AuditsRegistry/auditSet0/audit32/tooltip=Some UML tools allow for the drawing of multiple outgoing transitions from a join.\nA join should only have a single outgoing transition and more than one incoming transition.\n Ambler \#203
AuditsRegistry/auditSet0/audit24/enabled=false
AuditsRegistry/auditSet0/audit72/invariant=not owner.oclIsKindOf(uml20\:\:compositestructures\:\:Part)
MetricsRegistry/auditSet0/metric17/description=Number Of the Extension Point of this Use Case
AuditsRegistry/auditSet0/audit78/tooltip=A template cannot be used in the same manner as a non-template element of the same kind. The template element can only be used to generate bound elements, e.g. a template class cannot be used as the type of a typed element
MetricsRegistry/auditSet0/metric11/description=Number Of Classes In Package
MetricsRegistry/auditSet0/metric9/description=Number Of Classes this one Depends On
AuditsRegistry/auditSet0/audit5/invariant=let validMultiplicities \= Set{'0','1','0..1','0..*','1..*','*'} in\nlet multiplicity \= getPropertyValue('multiplicity') in\n validMultiplicities->includes(multiplicity) or \n multiplicity.oclIsUndefined()
MetricsRegistry/auditSet0/metric3/description=Nesting Level Of Class
AuditsRegistry/auditSet0/audit28/tooltip=To ensure all cases are covered, each outgoing transition should have a guard indicated.\n Ambler \#195
MetricsRegistry/auditSet0/metric2/lowerLimit=0
AuditsRegistry/auditSet0/audit65/description=Avoid Multiple Inheritance Usage
AuditsRegistry/auditSet0/audit25/tooltip=Many UML drawing tools allow for dependencies to be drawn from one component\nto another. This is discouraged in favor of indicating only dependency relationships\nbetween the interfaces of a component.\n Ambler \#226
MetricsRegistry/auditSet0/name=ModelMetricsSet
AuditsRegistry/auditSet0/audit81/language=ocl
AuditsRegistry/auditSet0/audit33/severity=severity.warning
MetricsRegistry/auditSet0/metric13/context=uml\:\:kernel\:\:packages\:\:Package
MetricsRegistry/auditSet0/metric18/description=Number Of Included Use Cases
MetricsRegistry/auditSet0/metric10/context=uml20\:\:kernel\:\:features\:\:Operation
MetricsRegistry/auditSet0/metric12/description=Number Of Classes In Package Recursively
AuditsRegistry/auditSet0/audit36/context=uml20\:\:usecases\:\:Actor
AuditsRegistry/auditSet0/audit30/language=ocl
MetricsRegistry/auditSet0/metric20/enabled=true
MetricsRegistry/auditSet0/metric4/description=Number Of Ancestors
MetricsRegistry/auditSet0/metric22/description=Number Of Classes Associated by Association Class
AuditsRegistry/auditSet0/audit33/context=uml20\:\:statemachines\:\:PseudoState
MetricsRegistry/auditSet0/metric3/lowerLimit=0
MetricsRegistry/auditSet0/metric13/name=NOOICOP
AuditsRegistry/auditSet0/audit51/tooltip=If an element that is owned by a package has visibility, it should be public or private. See UML2.0 Specification, 7.3.37
MetricsRegistry/auditSet0/metric14/invariant=ownedMembers->select(m | m.oclIsKindOf(uml20\:\:classes\:\:Class) and\n m.oclAsType(uml20\:\:classes\:\:Class).abstract)->size()
MetricsRegistry/auditSet0/metric10/lowerLimit=0
AuditsRegistry/auditSet0/audit43/enabled=true
AuditsRegistry/auditSet0/audit57/name=UCNIUTII
AuditsRegistry/auditSet0/audit32/name=JSHOOET
AuditsRegistry/auditSet0/audit66/description=Primitive Type Should be OCL-Compatible
AuditsRegistry/auditSet0/audit40/enabled=true
AuditsRegistry/auditSet0/audit60/description=Avoid Qualified Associations
MetricsRegistry/auditSet0/metric16/enabled=true
AuditsRegistry/auditSet0/audit1/invariant=not clientCardinality.oclIsUndefined() and\nnot supplierCardinality.oclIsUndefined()
AuditsRegistry/auditSet0/audit29/context=uml20\:\:statemachines\:\:Vertex
MetricsRegistry/auditSet0/metric19/description=Number Of Extended Use Cases
AuditsRegistry/auditSet0/audit44/severity=severity.warning
MetricsRegistry/auditSet0/metric21/tooltip=
AuditsRegistry/auditSet0/audit70/description=Identifier Contains Incorrect Character
MetricsRegistry/auditSet0/metric13/enabled=true
MetricsRegistry/auditSet0/metric19/invariant=getAllExtendedUseCases(Set{self})->size()
AuditsRegistry/auditSet0/audit47/tooltip=Transitions outgoing pseudostates (excluding Join, Junction and Initial ones) may not have a trigger. UML2.0 Specification, 15.3.14
AuditsRegistry/auditSet0/audit39/enabled=true
MetricsRegistry/auditSet0/metric13/description=Number Of Operations In Classes Of Package
AuditsRegistry/auditSet0/audit58/language=ocl
AuditsRegistry/auditSet0/audit44/tooltip=A join segment must not have guards or triggers. See UML2.0 Specification, 15.3.14
AuditsRegistry/auditSet0/audit36/enabled=true
MetricsRegistry/auditSet0/metric5/description=Number Of Direct Ancestors
MetricsRegistry/auditSet0/metric1/tooltip=
MetricsRegistry/auditSet0/metric4/lowerLimit=0
AuditsRegistry/auditSet0/audit41/language=ocl
MetricsRegistry/auditSet0/metric11/lowerLimit=0
MetricsRegistry/auditSet0/metric20/lowerLimit=0
AuditsRegistry/auditSet0/audit13/invariant=general.oclIsTypeOf(uml20\:\:usecases\:\:UseCase) implies\n not specific.oclIsTypeOf(uml20\:\:usecases\:\:UseCase)
MetricsRegistry/auditSet0/metric17/tooltip=
AuditsRegistry/auditSet0/audit67/description=Avoid Modeling Return Arrows
AuditsRegistry/auditSet0/audit17/name=ACD
MetricsRegistry/auditSet0/metric14/language=ocl
AuditsRegistry/auditSet0/audit69/name=ICKC
AuditsRegistry/auditSet0/audit61/description=Avoid Qualified n-ary Associations
AuditsRegistry/auditSet0/audit77/description=Default type should be compatible with exposed parametarable element type
AuditsRegistry/auditSet0/audit44/name=JSMNHGT
AuditsRegistry/auditSet0/audit52/context=uml20\:\:kernel\:\:instances\:\:Slot
AuditsRegistry/auditSet0/audit71/description=Link Is Missing Supplier
AuditsRegistry/auditSet0/audit71/name=LIMS
MetricsRegistry/auditSet0/metric3/name=NLOC
MetricsRegistry/auditSet0/metric10/invariant=formalParameters.type->asSet()->size()
AuditsRegistry/auditSet0/audit55/severity=severity.error
AuditsRegistry/auditSet0/audit1/enabled=true
MetricsRegistry/auditSet0/metric7/language=ocl
MetricsRegistry/auditSet0/metric5/lowerLimit=0
AuditsRegistry/auditSet0/audit69/language=ocl
MetricsRegistry/auditSet0/metric12/lowerLimit=0
MetricsRegistry/auditSet0/metric21/lowerLimit=0
AuditsRegistry/auditSet0/audit23/invariant=-- this audit uses custom OCL operation \n-- uml20\:\:kernel\:\:Classifier\:\:allDescendants(p\:Set(uml20\:\:kernel\:\:Classifier))\:Set(uml20\:\:kernel\:\:Classifier) \nlet descentandsAttributes \= allDescendants(Set{self}).attributes \nin descentandsAttributes \n ->forAll(da1 | attributes->select(oa | da1.name \= oa.name and ((da1.type.oclIsUndefined() and oa.type.oclIsUndefined()) or (da1.type \= oa.type)))->isEmpty())
MetricsRegistry/auditSet0/metric22/context=uml20\:\:kernel\:\:AssociationClass
AuditsRegistry/auditSet0/audit48/context=uml20\:\:statemachines\:\:State
AuditsRegistry/auditSet0/audit68/description=Avoid Modeling Of Object Destruction
AuditsRegistry/auditSet0/audit52/language=ocl
AuditsRegistry/auditSet0/audit50/severity=severity.error
AuditsRegistry/auditSet0/audit47/invariant=let kinds \= Set{uml20\:\:statemachines\:\:PseudoStateKind\:\:JOIN, \numl20\:\:statemachines\:\:PseudoStateKind\:\:JUNCTION,uml20\:\:statemachines\:\:PseudoStateKind\:\:INITIAL} \nin not source.oclIsTypeOf(uml20\:\:statemachines\:\:PseudoState) or \n(not kinds->includes(source.oclAsType(uml20\:\:statemachines\:\:PseudoState).kind) \nimplies trigger.oclIsUndefined())
AuditsRegistry/auditSet0/audit45/context=uml20\:\:statemachines\:\:TransitionLink
AuditsRegistry/auditSet0/audit7/severity=severity.warning
MetricsRegistry/auditSet0/metric2/language=ocl
MetricsRegistry/auditSet0/metric2/context=uml20\:\:classes\:\:Class
AuditsRegistry/auditSet0/audit78/description=Template cannot be used as typedElement's type
AuditsRegistry/auditSet0/audit5/tooltip=Fixed range multiplicities are not recommended as they are less \nflexible than 1..* or 0..* and represent commonly used\ncollections as found in most object-oriented languages today.\nAmbler \#102
AuditsRegistry/auditSet0/audit18/language=ocl
AuditsRegistry/auditSet0/audit63/tooltip=All associations of Interface should have public visibility. \n UML2.0 Specification, 7.3.24.
MetricsRegistry/auditSet0/metric9/invariant=let operationsParameterTypes \= ownedOperations.formalParameters.type->asSet() in\nlet operationReturnTypes \= ownedOperations.returnResult.type->asSet() in\nlet attributesTypes \= ownedAttributes.type->asSet() in\nlet generalizedTypes \= generalizations.supplier->asSet() in\nlet associatedTypes \= associations.supplier->asSet() in\nassociatedTypes->union(generalizedTypes)->union(attributesTypes)\n ->union(operationsParameterTypes)->union(operationReturnTypes)->asSet()\n ->select(t | t.oclIsKindOf(uml20\:\:kernel\:\:Classifier) and \n (not t.oclAsType(uml20\:\:kernel\:\:Classifier).isPrimitiveType()))->size()
AuditsRegistry/auditSet0/audit16/severity=severity.info
AuditsRegistry/auditSet0/audit55/enabled=true
AuditsRegistry/auditSet0/audit72/description=Port Should Never Belong To Part
AuditsRegistry/auditSet0/audit2/tooltip=In many modeling environments, it is possible to create an \nassociation without specifying multiplicity on the association \nends.  This is advantageous during the beginning stages of modeling, \nbut may confuse or complicate generation facilities.\nAmbler \#88 Frankel, 186 Frankel, 178
AuditsRegistry/auditSet0/audit60/tooltip=Qualified associations are not popular among most UML modelers and can be decomposed to a class representing the association with an attribute representing the qualifier. Frankel, 159
MetricsRegistry/auditSet0/metric18/context=uml20\:\:usecases\:\:UseCase
MetricsRegistry/auditSet0/metric20/invariant=getAllVertexes()->size()
AuditsRegistry/auditSet0/audit4/language=ocl
AuditsRegistry/auditSet0/audit2/severity=severity.warning
MetricsRegistry/auditSet0/metric6/lowerLimit=0
MetricsRegistry/auditSet0/metric20/language=ocl
MetricsRegistry/auditSet0/metric13/lowerLimit=0
MetricsRegistry/auditSet0/metric22/lowerLimit=0
AuditsRegistry/auditSet0/audit66/severity=severity.warning
AuditsRegistry/auditSet0/audit33/invariant=-- this audit uses custom defined operation inTransitions()\: \n-- uml20\:\:statemachines\:\:Vertex\:\:inTransitions() \: Set(uml20\:\:statemachines\:\:TransitionLink) \nkind \= uml20\:\:statemachines\:\:PseudoStateKind\:\:JOIN implies \ninTransitions()->size()>1
AuditsRegistry/auditSet0/audit59/tooltip=A use case cannot extend use cases that directly or indirectly extend it. The cyclic extension is senseless.
AuditsRegistry/auditSet0/audit10/tooltip=A guard placed on an initial transition from the topmost region that evaluates to \nfalse renders the diagram useless and should be avoided.\nAmbler \#186
MetricsRegistry/auditSet0/metric8/enabled=true
AuditsRegistry/auditSet0/audit56/tooltip=Two use cases specifying the same subject cannot be associated since each of them individually describes a complete usage of the subject. \n UML2.0 Specification, 16.3.6
AuditsRegistry/auditSet0/audit57/invariant=-- this audit uses custom OCL operation \n-- uml20\:\:usecases\:\:UseCase\:\:getAllIncludedUseCases(p\:Set(uml20\:\:usecases\:\:UseCase))\:Set(uml20\:\:usecases\:\:UseCase) \nnot getAllIncludedUseCases(Set{self})->includes(self)
MetricsRegistry/auditSet0/metric5/enabled=true
AuditsRegistry/auditSet0/audit79/description=Template can be specialized by template only
AuditsRegistry/auditSet0/audit63/language=ocl
AuditsRegistry/auditSet0/audit61/severity=severity.warning
AuditsRegistry/auditSet0/audit0/name=AAFC
AuditsRegistry/auditSet0/audit73/description=Multiple Associations Between Elements Should Have Unique Name or Role
MetricsRegistry/auditSet0/metric14/name=NOAC
MetricsRegistry/auditSet0/metric0/invariant=ownedAttributes->size()
AuditsRegistry/auditSet0/audit29/language=ocl
AuditsRegistry/auditSet0/audit58/name=ACIIC
AuditsRegistry/auditSet0/audit27/severity=severity.error
AuditsRegistry/auditSet0/audit33/name=JSHMTOET
MetricsRegistry/auditSet0/metric7/lowerLimit=0
AuditsRegistry/auditSet0/audit64/context=uml20\:\:kernel\:\:Property
AuditsRegistry/auditSet0/audit6/context=uml20\:\:kernel\:\:KernelAssociation
AuditsRegistry/auditSet0/audit12/language=ocl
AuditsRegistry/auditSet0/audit10/severity=severity.warning
MetricsRegistry/auditSet0/metric9/tooltip=
AuditsRegistry/auditSet0/audit43/invariant=client.oclAsType(uml20\:\:statemachines\:\:PseudoState).kind \= uml20\:\:statemachines\:\:PseudoStateKind\:\:FORK \n implies trigger.oclIsUndefined() and guard.oclIsUndefined()
MetricsRegistry/auditSet0/metric20/description=Number Of States In State Machine
AuditsRegistry/auditSet0/audit74/enabled=true
AuditsRegistry/auditSet0/audit61/context=uml20\:\:kernel\:\:AssociationEnd
AuditsRegistry/auditSet0/audit3/context=uml20\:\:kernel\:\:KernelAssociation
AuditsRegistry/auditSet0/audit67/invariant=not oclIsTypeOf(uml20\:\:interaction\:\:Int_ReplyMessage)
AuditsRegistry/auditSet0/audit77/severity=severity.warning
AuditsRegistry/auditSet0/audit71/enabled=true
AuditsRegistry/auditSet0/audit74/description=TemplateParameterSubstitution must have actual parameters
AuditsRegistry/auditSet0/audit11/context=uml20\:\:kernel\:\:AssociationEnd
AuditsRegistry/auditSet0/audit74/language=ocl
AuditsRegistry/auditSet0/audit72/severity=severity.error
AuditsRegistry/auditSet0/audit57/context=uml20\:\:usecases\:\:UseCase
AuditsRegistry/auditSet0/audit21/enabled=true
AuditsRegistry/auditSet0/audit18/name=ONAMAM
MetricsRegistry/auditSet0/metric8/lowerLimit=0
AuditsRegistry/auditSet0/audit75/tooltip=The names of exposed parameterable elements within same TemplateSignature should be unique
AuditsRegistry/auditSet0/audit67/enabled=true
AuditsRegistry/auditSet0/audit9/enabled=false
AuditsRegistry/auditSet0/audit38/severity=severity.warning
AuditsRegistry/auditSet0/audit53/invariant=slots->isUnique(definingFeature)
MetricsRegistry/auditSet0/metric21/description=Number Of Outgoing Transitions
AuditsRegistry/auditSet0/audit45/name=FSMTS
AuditsRegistry/auditSet0/audit6/enabled=true
AuditsRegistry/auditSet0/audit20/name=ASTA
AuditsRegistry/auditSet0/audit21/severity=severity.warning
AuditsRegistry/auditSet0/audit77/invariant=defaultParameter.oclIsUndefined() or defaultParameter.isAssignableFrom(ownedParameteredElement)
AuditsRegistry/auditSet0/audit72/name=PSNBTP
MetricsRegistry/auditSet0/metric4/name=NOA
AuditsRegistry/auditSet0/audit17/enabled=true
AuditsRegistry/auditSet0/audit35/language=ocl
AuditsRegistry/auditSet0/audit22/tooltip=Inherited static methods should not be hidden by same-named methods in child classes.
AuditsRegistry/auditSet0/audit75/description=TemplateParameters should have unique names
AuditsRegistry/auditSet0/audit14/enabled=true
AuditsRegistry/auditSet0/audit80/context=uml20\:\:kernel\:\:TypedElement
MetricsRegistry/auditSet0/metric9/lowerLimit=0
AuditsRegistry/auditSet0/audit63/invariant=client.oclIsKindOf(uml20\:\:components\:\:Interface) implies \nsupplierVisibility \= uml\:\:kernel\:\:VisibilityKind\:\:PUBLIC
AuditsRegistry/auditSet0/audit18/tooltip=A child class should not override with an abstract method a\nnon-abstract method found in a parent class.
AuditsRegistry/auditSet0/audit79/context=uml\:\:together\:\:BinaryLink
AuditsRegistry/auditSet0/audit49/severity=severity.error
AuditsRegistry/auditSet0/audit30/context=uml20\:\:statemachines\:\:PseudoState
AuditsRegistry/auditSet0/audit76/context=uml20\:\:templates\:\:TemplateParameterSubstitution
AuditsRegistry/auditSet0/audit32/severity=severity.warning
AuditsRegistry/auditSet0/audit80/language=ocl
AuditsRegistry/auditSet0/audit76/description=The actual parameter must be compatible with the formal template parameter
AuditsRegistry/auditSet0/audit46/language=ocl
AuditsRegistry/auditSet0/audit26/context=uml\:\:kernel\:\:PackageableElement
MetricsRegistry/auditSet0/metric19/language=ocl
AuditsRegistry/auditSet0/audit80/description=ExposedParameterableElement can be type for same template elements only
AuditsRegistry/auditSet0/audit73/invariant=associations->forAll(as1|associations->select(as2|\nas1.supplierClassifier\=as2.supplierClassifier and as1.name\=as2.name \nand (as1.supplierRole\=as2.supplierRole or (as1.supplierRole.oclIsUndefined() and as2.supplierRole.oclIsUndefined())))->size()\=1)
MetricsRegistry/auditSet0/metric10/enabled=true
AuditsRegistry/auditSet0/audit23/context=uml20\:\:classes\:\:Class
AuditsRegistry/auditSet0/audit1/name=AIM
AuditsRegistry/auditSet0/audit6/invariant=not (name\='Unknown Name' or name\='')
AuditsRegistry/auditSet0/audit41/tooltip=If state is submachineState, submachine should be defined for it
AuditsRegistry/auditSet0/audit33/enabled=true
MetricsRegistry/auditSet0/metric15/name=AR
AuditsRegistry/auditSet0/audit79/enabled=true
AuditsRegistry/auditSet0/audit59/name=UCNEUTEI
AuditsRegistry/auditSet0/audit30/enabled=true
AuditsRegistry/auditSet0/audit34/name=AMS
MetricsRegistry/auditSet0/metric14/tooltip=
AuditsRegistry/auditSet0/audit19/context=uml20\:\:kernel\:\:Parameter
AuditsRegistry/auditSet0/audit43/severity=severity.warning
MetricsRegistry/auditSet0/metric11/tooltip=
AuditsRegistry/auditSet0/audit18/invariant=--this audit uses the custom OCL operation \n--uml20\:\:kernel\:\:Classifier\:\:allClassifierAncestors(p\:Set(uml20\:\:kernel\:\:Classifier))\:Set(uml20\:\:kernel\:\:Classifier) \nlet owningClass \= owner.oclAsType(uml20\:\:kernel\:\:Classifier) in \nlet inheritedOperations \= owningClass.allClassifierAncestors(Set{owningClass}).features->reject(abstract) \nin not self.abstract or inheritedOperations->forAll(io | not self.isIdentical(io))
AuditsRegistry/auditSet0/audit37/tooltip=An abstract class that contains only abstract methods and final static fields should be declared as an interface. \n Audit is defined for UML1.4 classes
AuditsRegistry/auditSet0/audit29/enabled=true
AuditsRegistry/auditSet0/audit81/description=ExposedParameterableElement cannot be used outside template
AuditsRegistry/auditSet0/audit57/language=ocl
AuditsRegistry/auditSet0/audit34/tooltip=Other than Start states, no state should have an outgoing transition without\nan incoming transition.\n Ambler \#170 \n This audits doesn't report violations for Entry/ExitPoints also
AuditsRegistry/auditSet0/audit26/enabled=true
AuditsRegistry/auditSet0/audit40/language=ocl
MetricsRegistry/auditSet0/metric13/language=ocl
AuditsRegistry/auditSet0/audit19/name=ASTP
MetricsRegistry/auditSet0/metric15/invariant=let ownedAbstractsSize \= ownedMembers->select(m | m.oclAsType(uml20\:\:classes\:\:Class).abstract or \nm.oclIsKindOf(uml20\:\:components\:\:Interface))->size() \nin \n(100*ownedAbstractsSize / \n(ownedMembers->select(m|m.oclIsTypeOf(uml20\:\:classes\:\:Class)or m.oclIsTypeOf(uml20\:\:components\:\:Interface))->size())).round()  
AuditsRegistry/auditSet0/audit9/language=ocl
AuditsRegistry/auditSet0/audit42/context=uml20\:\:statemachines\:\:State
AuditsRegistry/auditSet0/audit46/name=JSMOFS
AuditsRegistry/auditSet0/audit28/invariant=client.oclAsType(uml20\:\:statemachines\:\:PseudoState).kind \= \numl20\:\:statemachines\:\:PseudoStateKind\:\:CHOICE implies \nguard->notEmpty()
AuditsRegistry/auditSet0/audit21/name=HIA
AuditsRegistry/auditSet0/audit52/enabled=true
AuditsRegistry/auditSet0/audit2/invariant=let multiplicity \= getPropertyValue('multiplicity') in\nnot multiplicity.oclIsUndefined()
AuditsRegistry/auditSet0/audit73/name=MABESHUNR
MetricsRegistry/auditSet0/metric5/name=NODA
AuditsRegistry/auditSet0/audit54/severity=severity.error
MetricsRegistry/auditSet0/metric15/context=uml\:\:kernel\:\:packages\:\:Package
MetricsRegistry/auditSet0/metric6/language=ocl
AuditsRegistry/auditSet0/audit68/language=ocl
MetricsRegistry/auditSet0/metric12/context=uml\:\:kernel\:\:packages\:\:Package
AuditsRegistry/auditSet0/audit38/context=uml20\:\:classes\:\:Class
MetricsRegistry/auditSet0/metric22/enabled=true
AuditsRegistry/auditSet0/audit51/language=ocl
AuditsRegistry/auditSet0/audit48/enabled=true
AuditsRegistry/auditSet0/audit14/invariant=let uie \: Set(String) \= Set{'uses','includes','extends'}\nin not stereotypes->exists(s|uie->includes(s))
AuditsRegistry/auditSet0/audit35/context=uml\:\:kernel\:\:NamedElement
MetricsRegistry/auditSet0/metric1/language=ocl
AuditsRegistry/auditSet0/audit6/severity=severity.warning
AuditsRegistry/auditSet0/audit53/tooltip=An instance specification can have one slot per structural feature of its classifiers, including inherited features. It is not necessary to model a slot for each structural feature however. \n UML2.0 Specification, 7.3.22
AuditsRegistry/auditSet0/audit17/language=ocl
MetricsRegistry/auditSet0/metric0/upperLimit=10
AuditsRegistry/auditSet0/audit45/enabled=true
AuditsRegistry/auditSet0/audit15/severity=severity.info
AuditsRegistry/auditSet0/audit38/invariant=let systemClasses \= Set{\n -- Classes from lava.lang package are listed below\n 'java.lang.AbstractMethodError',\n 'java.lang.AbstractStringBuilder',\n 'java.lang.Appendable',\n 'java.lang.ArithmeticException',\n 'java.lang.ArrayIndexOutOfBoundsException',\n 'java.lang.ArrayStoreException',\n 'java.lang.AssertionError',\n 'java.lang.AssertionStatusDirectives',\n 'java.lang.Boolean',\n 'java.lang.Byte',\n 'java.lang.Character',\n 'java.lang.CharacterData00',\n 'java.lang.CharacterData01',\n 'java.lang.CharacterData02',\n 'java.lang.CharacterData0E',\n 'java.lang.CharacterDataLatin1',\n 'java.lang.CharacterDataPrivateUse',\n 'java.lang.CharacterDataUndefined',\n 'java.lang.CharSequence',\n 'java.lang.Class',\n 'java.lang.ClassCastException',\n 'java.lang.ClassCircularityError',\n 'java.lang.ClassFormatError',\n 'java.lang.ClassLoader',\n 'java.lang.ClassNotFoundException',\n 'java.lang.Cloneable',\n 'java.lang.CloneNotSupportedException',\n 'java.lang.Comparable',\n 'java.lang.Compiler',\n 'java.lang.ConditionalSpecialCasing',\n 'java.lang.Deprecated',\n 'java.lang.Double',\n 'java.lang.Enum',\n 'java.lang.EnumConstantNotPresentException',\n 'java.lang.Error',\n 'java.lang.Exception',\n 'java.lang.ExceptionInInitializerError',\n 'java.lang.Float',\n 'java.lang.IllegalAccessError',\n 'java.lang.IllegalAccessException',\n 'java.lang.IllegalArgumentException',\n 'java.lang.IllegalMonitorStateException',\n 'java.lang.IllegalStateException',\n 'java.lang.IllegalThreadStateException',\n 'java.lang.IncompatibleClassChangeError',\n 'java.lang.IndexOutOfBoundsException',\n 'java.lang.InheritableThreadLocal',\n 'java.lang.InstantiationError',\n 'java.lang.InstantiationException',\n 'java.lang.Integer',\n 'java.lang.InternalError',\n 'java.lang.InterruptedException',\n 'java.lang.Iterable',\n 'java.lang.LinkageError',\n 'java.lang.Long',\n 'java.lang.Math',\n 'java.lang.NegativeArraySizeException',\n 'java.lang.NoClassDefFoundError',\n 'java.lang.NoSuchFieldError',\n 'java.lang.NoSuchFieldException',\n 'java.lang.NoSuchMethodError',\n 'java.lang.NoSuchMethodException',\n 'java.lang.NullPointerException',\n 'java.lang.Number',\n 'java.lang.NumberFormatException',\n 'java.lang.Object',\n 'java.lang.OutOfMemoryError',\n 'java.lang.Override',\n 'java.lang.Package',\n 'java.lang.Process',\n 'java.lang.ProcessBuilder',\n 'java.lang.ProcessEnvironment',\n 'java.lang.ProcessImpl',\n 'java.lang.Readable',\n 'java.lang.Runnable',\n 'java.lang.Runtime',\n 'java.lang.RuntimeException',\n 'java.lang.RuntimePermission',\n 'java.lang.SecurityException',\n 'java.lang.SecurityManager',\n 'java.lang.Short',\n 'java.lang.Shutdown',\n 'java.lang.StackOverflowError',\n 'java.lang.StackTraceElement',\n 'java.lang.StrictMath',\n 'java.lang.String',\n 'java.lang.StringBuffer',\n 'java.lang.StringBuilder',\n 'java.lang.StringCoding',\n 'java.lang.StringIndexOutOfBoundsException',\n 'java.lang.SuppressWarnings',\n 'java.lang.System',\n 'java.lang.Terminator',\n 'java.lang.Thread',\n 'java.lang.ThreadDeath',\n 'java.lang.ThreadGroup',\n 'java.lang.ThreadLocal',\n 'java.lang.Throwable',\n 'java.lang.TypeNotPresentException',\n 'java.lang.UnknownError',\n 'java.lang.UnsatisfiedLinkError',\n 'java.lang.UnsupportedClassVersionError',\n 'java.lang.UnsupportedOperationException',\n 'java.lang.VerifyError',\n 'java.lang.VirtualMachineError',\n 'java.lang.Void'}\nin not systemClasses->includes(fullName)
MetricsRegistry/auditSet0/metric2/enabled=true
AuditsRegistry/auditSet0/audit50/tooltip=An interface declares a set of public features and obligations that constitute a coherent service offered by a classifier. Visibility other than public violates the constraint defined in UML2.0 Specification, 7.3.24. 
AuditsRegistry/auditSet0/audit3/language=ocl
MetricsRegistry/auditSet0/metric18/enabled=true
AuditsRegistry/auditSet0/audit1/severity=severity.warning
MetricsRegistry/auditSet0/metric14/lowerLimit=0
MetricsRegistry/auditSet0/metric11/invariant=ownedMembers->select(m | m.oclIsKindOf(uml20\:\:classes\:\:Class))->size()
AuditsRegistry/auditSet0/audit65/severity=severity.warning
AuditsRegistry/auditSet0/audit60/name=AQA
AuditsRegistry/auditSet0/audit49/tooltip=provided\:Interface association of Port is derived from the interfaces realized by the type of the port or by the type of the port, if the port was typed by an interface.
MetricsRegistry/auditSet0/metric6/tooltip=
MetricsRegistry/auditSet0/metric5/invariant=generalizations->size()+ \ndependencies->select(oclIsTypeOf(uml20\:\:classes\:\:Implementation))->size() 
AuditsRegistry/auditSet0/audit79/language=ocl
AuditsRegistry/auditSet0/audit46/tooltip=A join segment must always originate from a state. See UML2.0 Specification, 15.3.14
AuditsRegistry/auditSet0/audit24/invariant=-- this audit uses custom OCL operations \n-- uml20\:\:kernel\:\:Classifier\:\:allDescendants(p\:Set(uml20\:\:kernel\:\:Classifier))\:Set(uml20\:\:kernel\:\:Classifier) \n--and uml20\:\:kernel\:\:features\:\:Operation\:\:isIdentical(another\: uml20\:\:kernel\:\:features\:\:Operation) \: Boolean \nlet descentandsOperations \= allDescendants(Set{self}).features \nin descentandsOperations->forAll(do1 | features->select(oo | do1.isIdentical(oo))->isEmpty())
AuditsRegistry/auditSet0/audit0/context=uml20\:\:kernel\:\:KernelAssociation
MetricsRegistry/auditSet0/metric3/tooltip=
MetricsRegistry/auditSet0/numberOf_metric=23
MetricsRegistry/auditSet0/metric1/upperLimit=10
AuditsRegistry/auditSet0/audit62/language=ocl
AuditsRegistry/auditSet0/audit60/severity=severity.warning
AuditsRegistry/auditSet0/audit48/invariant=not submachineState implies\nconnections->isEmpty()
AuditsRegistry/auditSet0/audit2/name=AIMAE
MetricsRegistry/auditSet0/metric16/name=NLOP
AuditsRegistry/auditSet0/audit28/language=ocl
AuditsRegistry/auditSet0/audit26/severity=severity.info
MetricsRegistry/auditSet0/metric15/lowerLimit=0
AuditsRegistry/auditSet0/audit35/name=ICKJ
AuditsRegistry/auditSet0/audit54/context=uml20\:\:kernel\:\:instances\:\:Slot
MetricsRegistry/auditSet0/metric21/invariant=transitions->size()
AuditsRegistry/auditSet0/audit10/name=NPGOIT
AuditsRegistry/auditSet0/audit10/invariant=client.oclAsType(uml20\:\:statemachines\:\:PseudoState).kind \= uml20\:\:statemachines\:\:PseudoStateKind\:\:INITIAL \nand not guard.oclIsUndefined() implies \nclient.owner.owner.oclAsType(uml20\:\:statemachines\:\:StateMachine).oclIsUndefined()
AuditsRegistry/auditSet0/audit72/tooltip=According to the UML20 specification, Part is not EncapsulatedClassifier and thus cannot contain Ports
AuditsRegistry/auditSet0/audit64/enabled=true
AuditsRegistry/auditSet0/audit23/language=ocl
AuditsRegistry/auditSet0/audit34/invariant=-- this audit uses custom defined operations inTransitions() and outTransitions()\: \n-- uml20\:\:statemachines\:\:Vertex\:\:inTransitions() \: Set(uml20\:\:statemachines\:\:TransitionLink) \n-- uml20\:\:statemachines\:\:Vertex\:\:outTransitions() \: Set(uml20\:\:statemachines\:\:TransitionLink) \nlet pskind \= oclAsType(uml20\:\:statemachines\:\:PseudoState).kind \n  in (not pskind.oclIsUndefined() and \n   (pskind \= uml20\:\:statemachines\:\:PseudoStateKind\:\:INITIAL or \n   pskind \= uml20\:\:statemachines\:\:PseudoStateKind\:\:ENTRY_POINT or \n   pskind \= uml20\:\:statemachines\:\:PseudoStateKind\:\:EXIT_POINT)) or \n   outTransitions()->isEmpty() or \n   inTransitions()->notEmpty()
AuditsRegistry/auditSet0/audit61/enabled=false
AuditsRegistry/auditSet0/audit3/enabled=true
MetricsRegistry/auditSet0/metric2/upperLimit=10
AuditsRegistry/auditSet0/audit58/invariant=-- this audit uses custom OCL operation \n-- uml20\:\:kernel\:\:Classifier\:\:allClassifierAncestors(p\:Set(uml20\:\:kernel\:\:Classifier))\:Set(uml20\:\:kernel\:\:Classifier) \nnot allClassifierAncestors(Set{self})->includes(self)
MetricsRegistry/auditSet0/metric7/context=uml20\:\:classes\:\:Class
AuditsRegistry/auditSet0/audit68/tooltip=To reduce clutter on diagrams, the explicit modeling of object destruction is discouraged.\nThis is particularly the case in languages such as Java where the actual destruction of\nan object is up to the virtual machine.\nAmbler \#131
AuditsRegistry/auditSet0/audit73/language=ocl
AuditsRegistry/auditSet0/audit71/severity=severity.error
AuditsRegistry/auditSet0/audit11/enabled=true
MetricsRegistry/auditSet0/metric4/context=uml20\:\:classes\:\:Class
AuditsRegistry/auditSet0/audit7/tooltip=Generators will require names on all associations and association ends.\nThose names provided by the modeler are likely to be more \nreadable/useful than those generated.\nFrankel, 186 Ambler \#98
MetricsRegistry/auditSet0/metric1/invariant=ownedOperations->size()
MetricsRegistry/auditSet0/metric16/lowerLimit=0
AuditsRegistry/auditSet0/audit65/tooltip=Multiple inheritance is not supported in some OO languages (like Java).\nAggregation or Implementation links could compensate this limitation.
AuditsRegistry/auditSet0/audit57/enabled=true
AuditsRegistry/auditSet0/audit39/language=ocl
AuditsRegistry/auditSet0/audit37/severity=severity.warning
AuditsRegistry/auditSet0/audit20/invariant=not getPropertyValue('$type').oclIsUndefined() and \ngetPropertyValue('$type')<>''
AuditsRegistry/auditSet0/audit4/tooltip=Fixed range multiplicities are not recommended as they are less \nflexible than 1..* or 0..* and represent commonly used\ncollections as found in most object-oriented languages today.\nAmbler \#102
AuditsRegistry/auditSet0/audit47/name=TFPMNHT
AuditsRegistry/auditSet0/audit20/severity=severity.error
AuditsRegistry/auditSet0/audit22/name=HISM
AuditsRegistry/auditSet0/audit44/invariant=supplier.oclAsType(uml20\:\:statemachines\:\:PseudoState).kind \= uml20\:\:statemachines\:\:PseudoStateKind\:\:JOIN \nimplies \ntrigger.oclIsUndefined() and guard.oclIsUndefined()
AuditsRegistry/auditSet0/audit74/name=TPSMHAP
MetricsRegistry/auditSet0/metric6/name=NOIO
MetricsRegistry/auditSet0/metric3/upperLimit=3
AuditsRegistry/auditSet0/audit15/tooltip=These stereotypes are deprecated and should not be used.\nAmbler \#46
AuditsRegistry/auditSet0/audit34/language=ocl
AuditsRegistry/auditSet0/audit68/invariant=not stereotypes->includes('destruction')
AuditsRegistry/auditSet0/audit12/tooltip=A plural name on association ends which have multiplicities > 1 \nallow for improved model readability.\nFowler, 39
AuditsRegistry/auditSet0/audit73/context=uml20\:\:classes\:\:Class
AuditsRegistry/auditSet0/audit70/context=uml\:\:kernel\:\:NamedElement
MetricsRegistry/auditSet0/metric17/lowerLimit=0
AuditsRegistry/auditSet0/audit80/enabled=true
AuditsRegistry/auditSet0/audit13/description=Avoid Generalization Between Use Cases
AuditsRegistry/auditSet0/audit30/invariant=kind \= uml20\:\:statemachines\:\:PseudoStateKind\:\:FORK implies\n inTransitions()->size()\=1
AuditsRegistry/auditSet0/audit69/context=uml\:\:kernel\:\:NamedElement
AuditsRegistry/auditSet0/audit54/invariant=--this audit uses the custom OCL operation \n--uml20\:\:kernel\:\:Classifier\:\:allClassifierAncestors(p\:Set(uml20\:\:kernel\:\:Classifier))\:Set(uml20\:\:kernel\:\:Classifier) \nowner.oclAsType(uml20\:\:kernel\:\:instances\:\:InstanceSpecification).instantiates \n->exists(c|(c.attributes->asSet()->union(c.allClassifierAncestors(Set{c}).attributes->asSet())) \n->includes(definingFeature.oclAsType(uml20\:\:kernel\:\:Property))) 
AuditsRegistry/auditSet0/audit48/severity=severity.error
AuditsRegistry/auditSet0/audit20/context=uml20\:\:kernel\:\:Property
AuditsRegistry/auditSet0/audit66/context=uml20\:\:kernel\:\:TypedElement
AuditsRegistry/auditSet0/audit8/context=uml20\:\:kernel\:\:AssociationEnd
AuditsRegistry/auditSet0/audit31/severity=severity.warning
AuditsRegistry/auditSet0/audit78/invariant=type.oclAsType(uml20\:\:templates\:\:TemplateableElement).ownedTemplateSignature.oclIsUndefined()
AuditsRegistry/auditSet0/audit76/enabled=false
AuditsRegistry/auditSet0/audit5/context=uml20\:\:kernel\:\:AssociationEnd
AuditsRegistry/auditSet0/audit61/name=AQAAE
AuditsRegistry/auditSet0/audit45/language=ocl
AuditsRegistry/auditSet0/audit81/tooltip=The exposed parameterable element may not be used in other parts of the model. A TemplateParameter may own the exposed ParameterableElement in situations where that element is only referenced from within the template.
AuditsRegistry/auditSet0/audit73/enabled=true
MetricsRegistry/auditSet0/metric18/lowerLimit=0
AuditsRegistry/auditSet0/audit16/context=uml\:\:kernel\:\:NamedElement
MetricsRegistry/auditSet0/metric18/language=ocl
AuditsRegistry/auditSet0/audit14/description=Avoid <<uses>>, <<includes>>, and <<extends>>
AuditsRegistry/auditSet0/audit40/invariant=(kind\=uml20\:\:statemachines\:\:PseudoStateKind\:\:ENTRY_POINT or\nkind\=uml20\:\:statemachines\:\:PseudoStateKind\:\:EXIT_POINT) implies\nowner.oclIsTypeOf(uml20\:\:statemachines\:\:StateMachine)
AuditsRegistry/auditSet0/audit13/context=uml20\:\:kernel\:\:Generalization
AuditsRegistry/auditSet0/audit31/tooltip=Some UML tools allow for the drawing of multiple incoming transitions to a fork.\nA fork should only have a single incoming transition and more than one exiting transition.\n Ambler \#202
AuditsRegistry/auditSet0/audit64/invariant=readOnly implies not (default.oclIsUndefined() or default\='')
AuditsRegistry/auditSet0/audit23/enabled=false
AuditsRegistry/auditSet0/audit3/name=AIN
MetricsRegistry/auditSet0/metric17/name=NOEPUC
AuditsRegistry/auditSet0/audit77/tooltip=The default must be compatible with the formal template parameter.\n UML2.0 Specification, 17.5.4
AuditsRegistry/auditSet0/audit20/enabled=true
AuditsRegistry/auditSet0/audit59/severity=severity.error
AuditsRegistry/auditSet0/audit36/name=AUA
AuditsRegistry/auditSet0/audit11/name=UPNAEMAE
AuditsRegistry/auditSet0/audit42/severity=severity.warning
AuditsRegistry/auditSet0/audit27/tooltip=In valid models all states should be owned by regions of StateMachine or other states. The models created in prevous Together versions can contain vertexes as packageable elements, this is incorrect.
MetricsRegistry/auditSet0/metric19/lowerLimit=0
AuditsRegistry/auditSet0/audit19/enabled=true
AuditsRegistry/auditSet0/audit56/language=ocl
AuditsRegistry/auditSet0/audit50/invariant=ownedAttributes->forAll(p|p.visibility\= uml\:\:kernel\:\:VisibilityKind\:\:PUBLIC) and \nownedOperations->forAll(f|f.visibility\=uml\:\:kernel\:\:VisibilityKind\:\:PUBLIC)
AuditsRegistry/auditSet0/audit15/description=Avoid <<uses>>, <<includes>>, and <<extends>>
AuditsRegistry/auditSet0/audit24/tooltip=If two or more direct subclasses of a class or interface define a method of the same signature, a refactoring may be in order to \u0093pull up\u0094 the method.  These cases are identified by this audit.
AuditsRegistry/auditSet0/audit74/invariant=actualParameters->notEmpty()
MetricsRegistry/auditSet0/metric12/language=ocl
AuditsRegistry/auditSet0/audit7/invariant=(supplierNavigability<>uml20\:\:kernel\:\:NavigabilityKind\:\:NOT_NAVIGABLE implies \nnot supplierRole.oclIsUndefined()) and \n(clientNavigability<>uml20\:\:kernel\:\:NavigabilityKind\:\:NOT_NAVIGABLE implies \nnot clientRole.oclIsUndefined()) \n
AuditsRegistry/auditSet0/audit8/language=ocl
AuditsRegistry/auditSet0/audit32/context=uml20\:\:statemachines\:\:PseudoState
AuditsRegistry/auditSet0/audit48/name=OSSCHCPR
AuditsRegistry/auditSet0/audit78/context=uml20\:\:kernel\:\:TypedElement
AuditsRegistry/auditSet0/audit42/enabled=true
AuditsRegistry/auditSet0/audit23/name=SHSA
AuditsRegistry/auditSet0/audit53/severity=severity.error
AuditsRegistry/auditSet0/audit16/description=Avoid Association Classes
AuditsRegistry/auditSet0/audit75/name=TPSHUN
MetricsRegistry/auditSet0/metric7/name=NOIA
AuditsRegistry/auditSet0/audit19/invariant=not getPropertyValue('$type').oclIsUndefined() and \ngetPropertyValue('$type')<>''
MetricsRegistry/auditSet0/metric5/language=ocl
AuditsRegistry/auditSet0/audit50/name=IMVMBP
AuditsRegistry/auditSet0/audit10/description=Never Place Guard on Initial Transition
AuditsRegistry/auditSet0/audit67/language=ocl
AuditsRegistry/auditSet0/audit19/severity=severity.error
MetricsRegistry/auditSet0/metric15/enabled=true
AuditsRegistry/auditSet0/audit28/context=uml20\:\:statemachines\:\:TransitionLink
MetricsRegistry/auditSet0/metric20/tooltip=
MetricsRegistry/auditSet0/metric12/enabled=true
AuditsRegistry/auditSet0/audit50/language=ocl
AuditsRegistry/auditSet0/audit38/enabled=false
AuditsRegistry/auditSet0/audit25/context=uml20\:\:classes\:\:Dependency
AuditsRegistry/auditSet0/audit5/severity=severity.warning
MetricsRegistry/auditSet0/metric0/language=ocl
AuditsRegistry/auditSet0/audit16/language=ocl
AuditsRegistry/auditSet0/audit43/tooltip=fork vertices serve to split an incoming transition into two or more transitions terminating on orthogonal target vertices(i.e. vertices in different regions of a composite state). The segments outgoing from a fork vertex must not have guards or triggers. \n UML2.0 Specification, 15.3.8,15.3.14.
AuditsRegistry/auditSet0/audit14/severity=severity.info
AuditsRegistry/auditSet0/audit35/enabled=false
MetricsRegistry/auditSet0/metric16/invariant=packageNestingLevel()
MetricsRegistry/auditSet0/metric0/tooltip=
MetricsRegistry/auditSet0/metric19/tooltip=
AuditsRegistry/auditSet0/audit40/tooltip=Pseudostates of kind entryPoint or exitPoint can only be defined in the topmost regions of a StateMachine  \n UML2.0 Specification, 15.3.8
AuditsRegistry/auditSet0/audit17/description=Abstract Class Declaration
MetricsRegistry/auditSet0/metric16/tooltip=This metric calculates the nesting level of each package. Top-level ones has level 1.
AuditsRegistry/auditSet0/audit2/language=ocl
AuditsRegistry/auditSet0/audit29/invariant=-- this audit uses custom defined operations inTransitions() and outTransitions()\: \n-- uml20\:\:statemachines\:\:Vertex\:\:inTransitions() \: Set(uml20\:\:statemachines\:\:TransitionLink) \n-- uml20\:\:statemachines\:\:Vertex\:\:outTransitions() \: Set(uml20\:\:statemachines\:\:TransitionLink) \noclIsKindOf(uml20\:\:statemachines\:\:FinalState) or \n(oclIsKindOf(uml20\:\:statemachines\:\:PseudoState) and \n oclAsType(uml20\:\:statemachines\:\:PseudoState).kind \= \n uml20\:\:statemachines\:\:PseudoStateKind\:\:EXIT_POINT) or \ninTransitions()->isEmpty() or outTransitions()->notEmpty()
AuditsRegistry/auditSet0/audit0/severity=severity.info
AuditsRegistry/auditSet0/audit11/description=Use Plural Names on n-ary Association Ends with Multiplicity > 1
AuditsRegistry/auditSet0/audit11/language=ocl
AuditsRegistry/auditSet0/audit3/invariant=not supplierNavigability.oclIsUndefined() and\nnot clientNavigability.oclIsUndefined()
AuditsRegistry/auditSet0/audit39/tooltip=As a kind of behavior, a state machine may have an associated behavioral feature (specification) and be the method of this behavoral feature. In this case the state machine specifies the behavior of this behavioral feature and cannot have entry/exit connection points. \n UML2.0 Specification, 15.3.12
AuditsRegistry/auditSet0/audit51/context=uml\:\:kernel\:\:NamedElement
AuditsRegistry/auditSet0/audit62/name=CORTDNMOT
AuditsRegistry/auditSet0/audit21/description=Hiding Inherited Attribute
AuditsRegistry/auditSet0/audit78/language=ocl
AuditsRegistry/auditSet0/audit76/severity=severity.warning
AuditsRegistry/auditSet0/name=ModelAuditsSet
AuditsRegistry/auditSet0/audit61/language=ocl
AuditsRegistry/auditSet0/audit0/enabled=false
AuditsRegistry/auditSet0/audit15/invariant=let uie \: Set(String) \= Set{'uses','includes','extends'}\nin not stereotypes->exists(s|uie->includes(s))
AuditsRegistry/auditSet0/audit4/name=AMIMM
MetricsRegistry/auditSet0/metric21/context=uml20\:\:statemachines\:\:State
AuditsRegistry/auditSet0/audit27/language=ocl
AuditsRegistry/auditSet0/audit25/severity=severity.warning
AuditsRegistry/auditSet0/audit47/context=uml20\:\:statemachines\:\:TransitionLink
AuditsRegistry/auditSet0/audit18/description=Overriding Non-Abstract Method with Abstract Method
MetricsRegistry/auditSet0/metric18/name=NOIUC
AuditsRegistry/auditSet0/audit39/invariant=not specification.oclIsUndefined() implies\nconnectionPoints->isEmpty()
AuditsRegistry/auditSet0/audit44/context=uml20\:\:statemachines\:\:TransitionLink
AuditsRegistry/auditSet0/audit12/description=Use Plural Names on Association Ends with Multiplicity > 1
AuditsRegistry/auditSet0/audit37/name=CSI
MetricsRegistry/auditSet0/metric1/context=uml20\:\:classes\:\:Class
AuditsRegistry/auditSet0/audit62/tooltip=For operation with stereotype <<create>> return type\nshould be either an operation's owning classifier\nor not specified.
AuditsRegistry/auditSet0/audit54/enabled=true
MetricsRegistry/auditSet0/metric20/name=NOSISM
AuditsRegistry/auditSet0/audit12/name=UPNAEMC
AuditsRegistry/auditSet0/audit22/description=Hiding Inherited Static Method
AuditsRegistry/auditSet0/audit22/language=ocl
MetricsRegistry/auditSet0/metric12/invariant=allMembers()->select(m | m.oclIsKindOf(uml20\:\:classes\:\:Class))->size()
AuditsRegistry/auditSet0/audit1/tooltip=In many modeling environments, it is possible to create an \nassociation without specifying multiplicity on the association \nends.  This is advantageous during the beginning stages of modeling, \nbut may confuse or complicate generation facilities.\nAmbler \#88 Frankel, 186 Frankel, 178
AuditsRegistry/auditSet0/audit51/enabled=true
MetricsRegistry/auditSet0/metric17/context=uml20\:\:usecases\:\:UseCase
MetricsRegistry/auditSet0/metric6/invariant=-- Uses predefined OCL-based operation\ninheritedOperations()->size()
MetricsRegistry/auditSet0/metric10/upperLimit=5
AuditsRegistry/auditSet0/audit25/invariant=clientNamedElement.oclIsTypeOf(uml20\:\:components\:\:Component) implies\n supplierNamedElement.oclIsTypeOf(uml20\:\:components\:\:Interface)
AuditsRegistry/auditSet0/audit58/tooltip=Cyclic inheritance is nonsense and reflects an incorrectness of used model.
AuditsRegistry/auditSet0/audit72/language=ocl
AuditsRegistry/auditSet0/audit70/severity=severity.warning
AuditsRegistry/auditSet0/audit19/description=Always Specify Type on Parameters
AuditsRegistry/auditSet0/audit49/invariant=--this audit uses the custom OCL operation \n--uml20\:\:kernel\:\:Classifier\:\:allClassifierAncestors(p\:Set(uml20\:\:kernel\:\:Classifier))\:Set(uml20\:\:kernel\:\:Classifier) \nlet portType \= type.oclAsType(uml20\:\:kernel\:\:Classifier) in \nprovideds->forAll(i|i\=type or portType.allClassifierAncestors(Set{portType})-> \nselect(oclIsTypeOf(uml20\:\:components\:\:Interface))->includes(i)) \n
MetricsRegistry/auditSet0/metric7/enabled=true
AuditsRegistry/auditSet0/audit55/tooltip=Only binary associations between Actor and Use Case, Class or Component are valid from the point of UML.
AuditsRegistry/auditSet0/audit47/enabled=true
AuditsRegistry/auditSet0/audit38/language=ocl
AuditsRegistry/auditSet0/audit29/description=Avoid "Black Hole" States
AuditsRegistry/auditSet0/audit36/severity=severity.warning
MetricsRegistry/auditSet0/metric4/enabled=true
AuditsRegistry/auditSet0/audit23/description=Subclasses Has the Same Attribute
AuditsRegistry/auditSet0/audit49/name=PIPSBPT
MetricsRegistry/auditSet0/metric22/invariant=associationClassConnectorAspect.associationEnds->size()
AuditsRegistry/auditSet0/audit11/invariant=let multiplicity \= getPropertyValue('multiplicity') in\nif multiplicity.oclIsUndefined()\n then false\n else not Set{'0','1','0..1',''}->includes(multiplicity)\nendif implies \n (let rolename\: String \= getPropertyValue('role') in \n rolename.substring(rolename.size(),rolename.size())\='s')
AuditsRegistry/auditSet0/audit24/name=SHSO
MetricsRegistry/auditSet0/metric4/upperLimit=10
MetricsRegistry/auditSet0/metric11/upperLimit=20
AuditsRegistry/auditSet0/audit76/name=APMBCWFP
AuditsRegistry/auditSet0/audit33/language=ocl
MetricsRegistry/auditSet0/metric20/upperLimit=10
MetricsRegistry/auditSet0/metric8/name=NOOAS
AuditsRegistry/auditSet0/audit35/invariant=let keywords \= Set{\n-- list of java keywords\n 'abstract',\n 'assert',\n 'boolean',\n 'break',\n 'byte',\n 'case',\n 'catch',\n 'char',\n 'class',\n 'const',\n 'continue',\n 'default',\n 'do',\n 'double',\n 'else',\n 'enum',\n 'extends',\n 'final',\n 'finally',\n 'float',\n 'for',\n 'goto',\n 'if',\n 'implements',\n 'import',\n 'instanceof',\n 'int',\n 'interface',\n 'long',\n 'native',\n 'new',\n 'package',\n 'private',\n 'protected',\n 'public',\n 'return',\n 'short',\n 'static',\n 'strictfp',\n 'super',\n 'switch',\n 'synchronized',\n 'this',\n 'throw',\n 'throws',\n 'transient',\n 'try',\n 'void',\n 'volatile',\n 'while'}\nin not keywords->includes(name.toLower())
AuditsRegistry/auditSet0/audit51/name=POEVMBPOP
AuditsRegistry/auditSet0/audit63/context=uml20\:\:kernel\:\:KernelAssociation
MetricsRegistry/auditSet0/metric8/tooltip=
AuditsRegistry/auditSet0/audit2/context=uml20\:\:kernel\:\:AssociationEnd
AuditsRegistry/auditSet0/audit60/context=uml20\:\:kernel\:\:KernelAssociation
AuditsRegistry/auditSet0/audit59/invariant=-- this audit uses custom OCL operation \n-- uml20\:\:usecases\:\:UseCase\:\:getAllExtendedUseCases(p\:Set(uml20\:\:usecases\:\:UseCase))\:Set(uml20\:\:usecases\:\:UseCase) \nnot getAllExtendedUseCases(Set{self})->includes(self)
MetricsRegistry/auditSet0/metric5/tooltip=
AuditsRegistry/auditSet0/audit70/enabled=false
AuditsRegistry/auditSet0/audit81/severity=severity.warning
MetricsRegistry/auditSet0/metric2/invariant=ownedOperations->select(o|\n o.visibility \= uml\:\:kernel\:\:VisibilityKind\:\:PUBLIC)->size()
AuditsRegistry/auditSet0/audit24/description=Subclasses Has the Same Operation
AuditsRegistry/auditSet0/audit59/context=uml20\:\:usecases\:\:UseCase
AuditsRegistry/auditSet0/audit49/language=ocl
AuditsRegistry/auditSet0/audit47/severity=severity.warning
AuditsRegistry/auditSet0/audit10/context=uml20\:\:statemachines\:\:TransitionLink
AuditsRegistry/auditSet0/audit21/invariant=--this audit uses the custom OCL operation \n--uml20\:\:kernel\:\:Classifier\:\:allClassifierAncestors(p\:Set(uml20\:\:kernel\:\:Classifier))\:Set(uml20\:\:kernel\:\:Classifier) \nlet owningClass \= owner.oclAsType(uml20\:\:kernel\:\:Classifier) in \nowningClass.allClassifierAncestors(Set{owningClass})-> \nforAll(anc|anc.attributes->forAll(a|not (a.name\=self.name \nand a.type\=self.type)))
MetricsRegistry/auditSet0/metric5/upperLimit=3
AuditsRegistry/auditSet0/audit69/enabled=false
MetricsRegistry/auditSet0/metric12/upperLimit=100
AuditsRegistry/auditSet0/audit56/context=uml20\:\:usecases\:\:UseCase
MetricsRegistry/auditSet0/metric21/upperLimit=10
AuditsRegistry/auditSet0/audit30/severity=severity.warning
AuditsRegistry/auditSet0/audit45/invariant=not source.oclIsTypeOf(uml20\:\:statemachines\:\:PseudoState) or\n ((source.oclAsType(uml20\:\:statemachines\:\:PseudoState).kind \=\n uml20\:\:statemachines\:\:PseudoStateKind\:\:FORK) implies\ntarget.oclIsKindOf(uml20\:\:statemachines\:\:State))
AuditsRegistry/auditSet0/audit74/tooltip=TemplateParameterSubstitution associates one or more actual parameters with a formal template parameter within the context of a TemplateBinding.\nThe list of actual parameters must not be empty
AuditsRegistry/auditSet0/audit66/enabled=true
AuditsRegistry/auditSet0/audit8/enabled=true
AuditsRegistry/auditSet0/audit44/language=ocl
AuditsRegistry/auditSet0/audit71/tooltip=Supplier is empty when referenced element is missing from the model. Remove this link to avoid problems in model.
AuditsRegistry/auditSet0/audit5/enabled=true
AuditsRegistry/auditSet0/audit69/invariant=let keywords \= Set{\n-- list of C++ keywords\n 'asm',\n 'auto',\n 'bool',\n 'break',\n 'case',\n 'catch',\n 'char',\n 'class',\n 'const',\n 'const_cast',\n 'continue',\n 'default',\n 'delete',\n 'do',\n 'double',\n 'dynamic_cast',\n 'else',\n 'enum',\n 'explicit',\n 'export',\n 'extern',\n 'false',\n 'float', \n 'for',\n 'friend',\n 'goto',\n 'if',\n 'int',\n 'long',\n 'mutable',\n 'namespace',\n 'new',\n 'operator',\n 'private',\n 'public',\n 'register', \n 'reinterpret_cast',\n 'return',\n 'short',\n 'signed',\n 'sizeof',\n 'static',\n 'static_cast',\n 'struct',\n 'switch',\n 'template',\n 'this',\n 'throw',\n 'true',\n 'try',\n 'typedef',\n 'typeid',\n 'typename',\n 'union',\n 'unsigned',\n 'using',\n 'virtual',\n 'void',\n 'volatile',\n 'wchar_t', \n 'while',\n \n-- Microsoft Specific keywords\n '__asm',\n 'dllimport',\n '__int8',\n 'naked',\n '__based',\n '__except',\n '__int16',\n '__stdcall',\n '__cdecl',\n '__fastcall',\n '__int32',\n 'thread',\n '__declspec',\n '__finally',\n '__int64',\n '__try',\n 'dllexport',\n '__inline',\n '__leave'\n}\nin not keywords->includes(name.toLower())
AuditsRegistry/auditSet0/audit63/name=IAWNPV
MetricsRegistry/auditSet0/metric17/language=ocl
AuditsRegistry/auditSet0/audit16/enabled=true
MetricsRegistry/auditSet0/metric9/context=uml20\:\:classes\:\:Class
AuditsRegistry/auditSet0/audit25/description=Components Should only Depend on Interfaces
AuditsRegistry/auditSet0/audit21/tooltip=A child class should not declare an attribute of the same name and type as is found in its parent.
AuditsRegistry/auditSet0/audit31/invariant=kind \= uml20\:\:statemachines\:\:PseudoStateKind\:\:FORK implies\n outTransitions()->size()>1
AuditsRegistry/auditSet0/audit13/enabled=true
AuditsRegistry/auditSet0/audit5/name=AMIMMAE
MetricsRegistry/auditSet0/metric6/upperLimit=50
AuditsRegistry/auditSet0/audit67/tooltip=To reduce clutter on diagrams, the explicit modeling of return arrows on messages is discouraged.
AuditsRegistry/auditSet0/audit9/tooltip=Manually added semantic dependencies in UML diagrams are problematic \nto generators and cannot be enforced due to insufficient meaning.  \nDependencies do not exist in MOF and are to be discouraged in the UML.\nFrankel, 159
MetricsRegistry/auditSet0/metric13/upperLimit=200
MetricsRegistry/auditSet0/metric22/upperLimit=2
MetricsRegistry/auditSet0/metric19/name=NOEUC
AuditsRegistry/auditSet0/audit58/severity=severity.error
AuditsRegistry/auditSet0/audit55/invariant=-- this audit uses the library operation getIncomingLinks() \n-- that is native OCL extension. This operation returns the \n-- set of all incoming links for context element \nassociations->forAll(\n a|a.supplier.oclIsKindOf(uml20\:\:usecases\:\:UseCase) or \n a.supplier.oclIsKindOf(uml20\:\:classes\:\:Class) or \n a.supplier.oclIsKindOf(uml20\:\:components\:\:Component)) \nand \n getIncomingLinks()->select(l|l.oclIsTypeOf(uml20\:\:kernel\:\:AssociationEnd))->isEmpty() \nand \n getIncomingLinks()->select(l|l.oclIsKindOf(uml20\:\:kernel\:\:KernelAssociation)) \n ->forAll( \n  ae | ae.client.oclIsKindOf(uml20\:\:usecases\:\:UseCase) or \n  ae.client.oclIsKindOf(uml20\:\:classes\:\:Class) or \n  ae.client.oclIsKindOf(uml20\:\:components\:\:Component)) 
AuditsRegistry/auditSet0/audit38/name=CWSCJ
AuditsRegistry/auditSet0/audit41/severity=severity.error
AuditsRegistry/auditSet0/audit79/invariant=not(oclIsTypeOf(uml20\:\:kernel\:\:Generalization) or \noclIsTypeOf(uml20\:\:usecases\:\:Extend) or \noclIsTypeOf(uml20\:\:usecases\:\:Include)) \nor (not supplier.oclAsType(uml20\:\:templates\:\:TemplateableElement).ownedTemplateSignature.oclIsUndefined() \nimplies not client.oclAsType(uml20\:\:templates\:\:TemplateableElement).ownedTemplateSignature.oclIsUndefined()) 
MetricsRegistry/auditSet0/metric21/name=NOOT
AuditsRegistry/auditSet0/audit13/name=AGBUC
AuditsRegistry/auditSet0/audit17/tooltip=If a class marked abstract does not provide any abstract methods,\nor if a class that is marked as abstract contains one or more public\nconstructors, this audit will be flagged.
AuditsRegistry/auditSet0/audit60/invariant=clientQualifiers->isEmpty() and \nsupplierQualifiers->isEmpty() 
AuditsRegistry/auditSet0/audit55/language=ocl
AuditsRegistry/auditSet0/audit75/context=uml20\:\:templates\:\:TemplateSignature
AuditsRegistry/auditSet0/audit14/tooltip=These stereotypes are deprecated and should not be used.\nAmbler \#46
AuditsRegistry/auditSet0/audit26/description=All Elements Should Have Descriptions
MetricsRegistry/auditSet0/metric7/upperLimit=20
AuditsRegistry/auditSet0/audit20/description=Always Specify Type on Attributes
MetricsRegistry/auditSet0/metric14/upperLimit=10
MetricsRegistry/auditSet0/metric11/language=ocl
AuditsRegistry/auditSet0/audit65/invariant=generalizations->size()<\=1
AuditsRegistry/auditSet0/audit30/description=Forks Should Have Only One Entry Transition
AuditsRegistry/auditSet0/audit7/language=ocl
AuditsRegistry/auditSet0/audit22/context=uml20\:\:kernel\:\:features\:\:Operation
AuditsRegistry/auditSet0/audit69/severity=severity.warning
AuditsRegistry/auditSet0/audit32/enabled=true
AuditsRegistry/auditSet0/audit70/invariant=let incorrectCharacters \= Set{\n-- list of invalid identifier parts\n '\!', '~', '`', '@', '\#',\n '%', '^', '&', '*', '(',\n ')', '-', '+', '\=', ' ',\n '[', ']', '{', '}', '\\\\',\n '"', '|', ',', '.', '/',\n '<', '>', '?' \n}\nin incorrectCharacters->forAll(c | name.indexOf(c) < 0)
AuditsRegistry/auditSet0/audit25/name=CSODOI
AuditsRegistry/auditSet0/audit78/enabled=true
MetricsRegistry/auditSet0/metric4/language=ocl
AuditsRegistry/auditSet0/audit77/name=DPSHCT
MetricsRegistry/auditSet0/metric9/name=NOCDO
AuditsRegistry/auditSet0/audit27/description=States Should Belong To Regions
AuditsRegistry/auditSet0/audit66/language=ocl
AuditsRegistry/auditSet0/audit18/severity=severity.error
AuditsRegistry/auditSet0/audit52/name=SMHFD
MetricsRegistry/auditSet0/metric13/tooltip=
AuditsRegistry/auditSet0/audit64/severity=severity.error
MetricsRegistry/auditSet0/metric8/upperLimit=10
AuditsRegistry/auditSet0/audit18/context=uml20\:\:kernel\:\:features\:\:Operation
MetricsRegistry/auditSet0/metric15/upperLimit=100
AuditsRegistry/auditSet0/audit37/description=Class Should be Interface
MetricsRegistry/auditSet0/metric10/tooltip=
AuditsRegistry/auditSet0/audit75/invariant=ownedParameters->isUnique(ownedParameteredElement.oclAsType(uml\:\:kernel\:\:NamedElement).name)
AuditsRegistry/auditSet0/audit36/tooltip=An actor with no association to a use case provides no value to a diagram and should therefore be avoided.\nAmbler \#35
AuditsRegistry/auditSet0/audit28/enabled=true
AuditsRegistry/auditSet0/audit31/description=Forks Should Have More Then One Exiting Transition
AuditsRegistry/auditSet0/audit4/severity=severity.warning
AuditsRegistry/auditSet0/audit15/language=ocl
MetricsRegistry/auditSet0/metric22/language=ocl
AuditsRegistry/auditSet0/audit33/tooltip=Some UML tools allow for the drawing of multiple outgoing transitions from a join.\nA join should only have a single outgoing transition and more than one incoming transition.\n Ambler \#203
AuditsRegistry/auditSet0/audit13/severity=severity.warning
AuditsRegistry/auditSet0/audit25/enabled=true
AuditsRegistry/auditSet0/audit8/invariant=not getPropertyValue('role').oclIsUndefined()
AuditsRegistry/auditSet0/audit80/invariant=type.owner.oclIsTypeOf(uml20\:\:templates\:\:TemplateParameter) implies \n(not self.getOwningTemplate().oclIsUndefined() and \ntype.getOwningTemplate() \= self.getOwningTemplate())
AuditsRegistry/auditSet0/audit1/language=ocl
AuditsRegistry/auditSet0/audit10/language=ocl
AuditsRegistry/auditSet0/audit28/description=All Transitions Exiting a Decision Must Have Guards
MetricsRegistry/auditSet0/metric9/upperLimit=10
AuditsRegistry/auditSet0/audit29/tooltip=Other than End states, no state should have an incoming transition without an outgoing transition.\n Ambler \#169
MetricsRegistry/auditSet0/metric16/upperLimit=10
AuditsRegistry/auditSet0/audit41/context=uml20\:\:statemachines\:\:State
AuditsRegistry/auditSet0/audit38/description=Conflict With System Class
AuditsRegistry/auditSet0/audit64/name=ROFSHIV
AuditsRegistry/auditSet0/audit29/severity=severity.warning
AuditsRegistry/auditSet0/audit77/language=ocl
AuditsRegistry/auditSet0/audit75/severity=severity.warning
AuditsRegistry/auditSet0/audit32/description=Joins Should Have Only One Exit Transition
AuditsRegistry/auditSet0/audit60/language=ocl
MetricsRegistry/auditSet0/metric14/context=uml\:\:kernel\:\:packages\:\:Package
MetricsRegistry/auditSet0/metric11/context=uml\:\:kernel\:\:packages\:\:Package
AuditsRegistry/auditSet0/audit26/language=ocl
AuditsRegistry/auditSet0/audit24/severity=severity.warning
AuditsRegistry/auditSet0/audit37/context=uml14\:\:kernel\:\:classes\:\:Class
AuditsRegistry/auditSet0/audit6/name=ANA
MetricsRegistry/auditSet0/metric17/invariant=extensionPoints->size()
MetricsRegistry/auditSet0/metric21/enabled=true
MetricsRegistry/numberOf_auditSet=1
AuditsRegistry/auditSet0/audit34/context=uml20\:\:statemachines\:\:Vertex
AuditsRegistry/auditSet0/audit52/tooltip=each slot should have 1 defining feature - classifier's structural feature specifying the values that may be held by the slot. Together allows this slot property empty, but this model is incomplete.
AuditsRegistry/auditSet0/audit39/name=BSMSNHCP
MetricsRegistry/auditSet0/metric17/upperLimit=5
AuditsRegistry/auditSet0/audit44/enabled=true
AuditsRegistry/auditSet0/audit39/description=A state machine as the method for a behavioral feature cannot have entry/exit connection points.
MetricsRegistry/auditSet0/metric22/name=NOCABAC
AuditsRegistry/auditSet0/audit21/language=ocl
MetricsRegistry/auditSet0/metric1/enabled=true
AuditsRegistry/auditSet0/audit41/enabled=true
AuditsRegistry/auditSet0/audit33/description=Joins Should Have More Then One Entry Transition
MetricsRegistry/auditSet0/metric17/enabled=true
AuditsRegistry/auditSet0/numberOf_audit=82
MetricsRegistry/auditSet0/metric22/tooltip=
AuditsRegistry/auditSet0/audit48/tooltip=Connection point references are sources/targets of transitions implying exits out of/entries into the submachine state machine referenced by a submachine state. Their presence doesn't make sense for state that refers to no submachine. \n UML2.0 Specification, 15.3.11
AuditsRegistry/auditSet0/audit16/invariant=not oclIsTypeOf(uml20\:\:kernel\:\:AssociationClass)
AuditsRegistry/auditSet0/audit45/tooltip=A fork segment must always target a state \n UML2.0 Specification, 15.3.14
AuditsRegistry/auditSet0/audit37/enabled=true
AuditsRegistry/auditSet0/audit37/language=ocl
MetricsRegistry/auditSet0/metric2/tooltip=
AuditsRegistry/auditSet0/audit35/severity=severity.warning
MetricsRegistry/auditSet0/metric18/upperLimit=5
MetricsRegistry/auditSet0/metric18/tooltip=
AuditsRegistry/auditSet0/audit34/description=Avoid "Miracle" States
AuditsRegistry/auditSet0/audit26/name=AESHD
AuditsRegistry/auditSet0/audit32/language=ocl
AuditsRegistry/auditSet0/audit78/name=TSNBT
AuditsRegistry/auditSet0/audit53/context=uml20\:\:kernel\:\:instances\:\:InstanceSpecification
AuditsRegistry/auditSet0/audit53/name=SFDMBU
MetricsRegistry/auditSet0/metric7/invariant=-- Uses predefined OCL-based operation\ninheritedAttributes()->size()
AuditsRegistry/auditSet0/audit63/enabled=true
AuditsRegistry/auditSet0/audit50/context=uml20\:\:components\:\:Interface
AuditsRegistry/auditSet0/audit26/invariant=not (description.oclIsUndefined() or description\='')
AuditsRegistry/auditSet0/audit80/name=EPECNBT
AuditsRegistry/auditSet0/audit2/enabled=true
AuditsRegistry/auditSet0/audit60/enabled=false
AuditsRegistry/auditSet0/audit80/severity=severity.warning
MetricsRegistry/auditSet0/metric19/upperLimit=5
AuditsRegistry/auditSet0/audit48/language=ocl
AuditsRegistry/auditSet0/audit49/context=uml20\:\:compositestructures\:\:Port
AuditsRegistry/auditSet0/audit46/severity=severity.warning
MetricsRegistry/auditSet0/metric6/context=uml20\:\:classes\:\:Class
AuditsRegistry/auditSet0/audit35/description=Identifier Conflicts with Keyword
AuditsRegistry/auditSet0/audit59/enabled=true
AuditsRegistry/auditSet0/audit46/context=uml20\:\:statemachines\:\:TransitionLink
AuditsRegistry/auditSet0/audit10/enabled=true
MetricsRegistry/auditSet0/metric3/context=uml20\:\:classes\:\:Class
AuditsRegistry/auditSet0/audit6/tooltip=Generators will require names on all associations and association \nends.  Those names provided by the modeler are likely to be more \nreadable/useful than those generated.\nFrankel, 186
AuditsRegistry/auditSet0/audit64/tooltip=If some property is declared Read-Only it should be initialized
AuditsRegistry/auditSet0/audit45/description=Fork Segment Must Always Target a State
AuditsRegistry/auditSet0/audit56/enabled=true
AuditsRegistry/auditSet0/audit43/language=ocl
AuditsRegistry/auditSet0/audit61/tooltip=Qualified associations are not popular among most UML modelers and can be decomposed to a class representing the association with an attribute representing the qualifier. Frankel, 159
AuditsRegistry/auditSet0/audit3/tooltip=A lack of navigability in UML indicates either bidirectional, or\nnon-specified navigability. This is fine for human interpretation\nwith a common understanding, but may confuse or \ncomplicate generation facilities.\nFrankel, 168
AuditsRegistry/auditSet0/audit36/invariant=--this audit uses custom OCL operation \n--uml20\:\:usecases\:\:Actor\:\:getLinksFromUseCases()\:Set(uml20\:\:kernel\:\:KernelAssociation) \nassociations->select(a|a.supplier.oclIsTypeOf(uml20\:\:usecases\:\:UseCase)) \n->union(getLinksFromUseCases())->notEmpty()
AuditsRegistry/auditSet0/audit65/name=AMIU
MetricsRegistry/auditSet0/metric16/language=ocl
AuditsRegistry/auditSet0/audit40/name=CPSBTSM
AuditsRegistry/auditSet0/audit41/invariant=submachineState implies not submachine.oclIsUndefined()
AuditsRegistry/auditSet0/audit72/context=uml20\:\:compositestructures\:\:Port
AuditsRegistry/auditSet0/audit11/tooltip=A plural name on association ends which have multiplicities > 1 \nallow for improved model readability.\nFowler, 39
MetricsRegistry/auditSet0/metric9/enabled=true
AuditsRegistry/numberOf_auditSet=1
AuditsRegistry/auditSet0/audit36/description=Avoid Unassociated Actors
MetricsRegistry/auditSet0/metric3/invariant=-- Uses predefined OCL-based operation\nclassNestingLevel()
AuditsRegistry/auditSet0/audit7/name=IRNOAE
AuditsRegistry/auditSet0/audit59/language=ocl
MetricsRegistry/auditSet0/metric6/enabled=true
AuditsRegistry/auditSet0/audit57/severity=severity.error
AuditsRegistry/auditSet0/audit46/description=Join Segment Must always Originate From a State.
MetricsRegistry/auditSet0/metric9/language=ocl
AuditsRegistry/auditSet0/audit40/description=Pseudostates of kind entryPoint/exitPoint can only be defined in the topmost regions of a StateMachine
AuditsRegistry/auditSet0/audit46/invariant=not target.oclIsTypeOf(uml20\:\:statemachines\:\:PseudoState) or\n ((target.oclAsType(uml20\:\:statemachines\:\:PseudoState).kind \=\n uml20\:\:statemachines\:\:PseudoStateKind\:\:JOIN) implies\nsource.oclIsKindOf(uml20\:\:statemachines\:\:State))
AuditsRegistry/auditSet0/audit68/context=uml20\:\:interaction\:\:Message
AuditsRegistry/auditSet0/audit54/language=ocl
AuditsRegistry/auditSet0/audit52/severity=severity.warning
AuditsRegistry/auditSet0/audit7/context=uml20\:\:kernel\:\:KernelAssociation
AuditsRegistry/auditSet0/audit65/context=uml20\:\:classes\:\:Class
AuditsRegistry/auditSet0/audit9/severity=severity.info
AuditsRegistry/auditSet0/audit51/invariant=owner.oclIsKindOf(uml\:\:kernel\:\:packages\:\:Package) implies \n(visibility.oclIsUndefined() or \nvisibility\=uml\:\:kernel\:\:VisibilityKind\:\:PUBLIC or \nvisibility\=uml\:\:kernel\:\:VisibilityKind\:\:PRIVATE)\n
AuditsRegistry/auditSet0/audit75/enabled=true
AuditsRegistry/auditSet0/audit4/context=uml20\:\:kernel\:\:KernelAssociation
AuditsRegistry/auditSet0/audit80/tooltip=The exposed parameterable element may not be used in other parts of the model. A TemplateParameter may own the exposed ParameterableElement in situations where that element is only referenced from within the template.
AuditsRegistry/auditSet0/audit72/enabled=true
MetricsRegistry/auditSet0/metric10/language=ocl
AuditsRegistry/auditSet0/audit15/context=uml20\:\:kernel\:\:AssociationEnd
AuditsRegistry/auditSet0/audit47/description=Transitions outgoing pseudostates may not have a trigger.
AuditsRegistry/auditSet0/audit6/language=ocl
AuditsRegistry/auditSet0/audit41/description=If state is submachineState, submachine should be defined for it
AuditsRegistry/auditSet0/audit12/context=uml20\:\:kernel\:\:KernelAssociation
AuditsRegistry/auditSet0/audit56/invariant=associations->forAll(a|a.supplier.oclIsKindOf(uml20\:\:usecases\:\:UseCase) implies\n(a.supplier.oclAsType(uml20\:\:usecases\:\:UseCase).subjects->asSet()\n ->intersection(subjects->asSet()))->isEmpty())\n
AuditsRegistry/auditSet0/audit68/severity=severity.info
AuditsRegistry/auditSet0/audit79/tooltip=Template element cannot be extended by element that is not template
AuditsRegistry/auditSet0/audit30/tooltip=Some UML tools allow for the drawing of multiple incoming transitions to a fork.\nA fork should only have a single incoming transition and more than one exiting transition.\n Ambler \#202
AuditsRegistry/auditSet0/audit22/enabled=true
AuditsRegistry/auditSet0/audit76/tooltip=The actual parameter must be compatible with the formal template parameter, e.g. the actual parameter for a class template parameter must be a class.\n (UML20 specification, 17.5.5)
AuditsRegistry/auditSet0/audit68/enabled=true
AuditsRegistry/auditSet0/audit27/name=SSBTR
MetricsRegistry/auditSet0/metric3/language=ocl
AuditsRegistry/auditSet0/audit61/invariant=getPropertyValue('qualifier').oclIsUndefined()
AuditsRegistry/auditSet0/audit79/name=TCBSBTO
MetricsRegistry/auditSet0/metric10/name=NOOPT
AuditsRegistry/auditSet0/audit17/severity=severity.error
AuditsRegistry/auditSet0/audit65/language=ocl
AuditsRegistry/auditSet0/audit63/severity=severity.error
AuditsRegistry/auditSet0/audit2/description=Always Indicate Multiplicity for n-ary Associations
AuditsRegistry/auditSet0/audit54/name=DFSBSFOC
AuditsRegistry/auditSet0/audit26/tooltip=This audit checks not all elements but only ones extending PackageableElement. User can adopt it to his own needs if necessary
AuditsRegistry/auditSet0/audit81/name=EPECNBLT
AuditsRegistry/auditSet0/audit18/enabled=true
AuditsRegistry/auditSet0/audit48/description=Only Submachine States Can Have Connection Point References.
AuditsRegistry/auditSet0/audit23/tooltip=If two or more direct subclasses of a class or interface define a field of the same signature, a refactoring may be in order to \u0093pull up\u0094 the field. These cases are identified by this audit.
AuditsRegistry/auditSet0/audit14/language=ocl
AuditsRegistry/auditSet0/audit12/severity=severity.info
AuditsRegistry/auditSet0/audit15/enabled=true
AuditsRegistry/auditSet0/audit66/invariant=type.oclIsKindOf(uml20\:\:kernel\:\:PrimitiveType) implies\nSet{'Integer','Real','Boolean','String'}->includes(type.name)
AuditsRegistry/auditSet0/audit42/description=A state is not allowed to have both a submachine and regions.
AuditsRegistry/auditSet0/audit81/context=uml\:\:together\:\:BinaryLink
AuditsRegistry/auditSet0/audit79/severity=severity.warning
AuditsRegistry/auditSet0/audit0/language=ocl
AuditsRegistry/auditSet0/audit9/description=Avoid Using Dependencies
AuditsRegistry/auditSet0/audit71/invariant=not self.supplier.oclIsUndefined()
AuditsRegistry/auditSet0/audit3/description=Always Indicate Navigability
AuditsRegistry/auditSet0/audit19/tooltip=Many UML modeling tools default to a primitive type assignment. Others may leave a\n<<null>> in place which may prove problematic for generators. It is therefore\nrecommended that type information be provided for all attributes and parameters.\n Frankel, 185
AuditsRegistry/auditSet0/audit31/context=uml20\:\:statemachines\:\:PseudoState
AuditsRegistry/auditSet0/audit4/invariant=let validMultiplicities \= Set{'0','1','0..1','0..*','1..*','*'} in\n validMultiplicities->includes(supplierCardinality) and\n validMultiplicities->includes(clientCardinality)
AuditsRegistry/auditSet0/audit14/name=AUIE
AuditsRegistry/auditSet0/audit76/language=ocl
AuditsRegistry/auditSet0/audit74/severity=severity.warning
AuditsRegistry/auditSet0/audit77/context=uml20\:\:templates\:\:TemplateParameter
AuditsRegistry/auditSet0/audit66/name=PTSOC
AuditsRegistry/auditSet0/audit49/description=Provided Interface of a Port Should Be the Port Type or one of interfaces realized by the port type
AuditsRegistry/auditSet0/audit41/name=SSSHSM
AuditsRegistry/auditSet0/audit43/description=Fork Segment Must Not Have Guards or Triggers
MetricsRegistry/auditSet0/metric14/enabled=true
MetricsRegistry/auditSet0/metric0/name=NOOA
AuditsRegistry/auditSet0/audit25/language=ocl
AuditsRegistry/auditSet0/audit23/severity=severity.warning
AuditsRegistry/auditSet0/audit71/language=ocl
AuditsRegistry/auditSet0/audit9/invariant=not oclIsTypeOf(uml20\:\:classes\:\:Dependency)
AuditsRegistry/auditSet0/audit27/context=uml20\:\:statemachines\:\:Vertex
AuditsRegistry/auditSet0/audit8/name=IRNOAEAE
MetricsRegistry/auditSet0/metric11/enabled=true
AuditsRegistry/auditSet0/audit81/invariant=(oclIsKindOf(uml20\:\:kernel\:\:KernelAssociation) or \noclIsKindOf(uml20\:\:kernel\:\:Generalization) or \noclIsKindOf(uml20\:\:classes\:\:Dependency) or \noclIsKindOf(uml20\:\:components\:\:ProvidedInterface) or \n oclIsKindOf(uml20\:\:components\:\:RequiredInterface) or \noclIsKindOf(uml20\:\:usecases\:\:Extend) or \noclIsKindOf(uml20\:\:usecases\:\:Include)) and \n supplier.owner.oclIsTypeOf(uml20\:\:templates\:\:TemplateParameter) implies \n(not self.getOwningTemplate().oclIsUndefined() and \n(client.getOwningTemplate()\= supplier.getOwningTemplate())) 
AuditsRegistry/auditSet0/audit24/context=uml20\:\:classes\:\:Class
AuditsRegistry/auditSet0/audit4/description=Avoid Multiplicities Involving Minimums and Maximums
AuditsRegistry/auditSet0/audit42/tooltip=A state is not allowed to have both a submachine and regions. See UML2.0 Specification, 15.3.11
AuditsRegistry/auditSet0/audit34/enabled=true
AuditsRegistry/auditSet0/audit20/language=ocl
MetricsRegistry/auditSet0/metric15/tooltip=This metric calculates the percentage of abstract classes and interfaces in package.
MetricsRegistry/auditSet0/metric13/invariant=ownedMembers->select(m | m.oclIsKindOf(uml20\:\:classes\:\:Class))\n ->collect(m | m.oclAsType(uml20\:\:classes\:\:Class).ownedOperations)->size()
AuditsRegistry/auditSet0/audit44/description=Join Segment Must Not Have Guards or Triggers.
AuditsRegistry/auditSet0/audit38/tooltip=Classes should be given names that will not cause potential conflicts with standard Java API classes
AuditsRegistry/auditSet0/audit54/description=The Defining Feature of each slot Should Be a Structural Feature of a Classifier of the instance specification.
AuditsRegistry/auditSet0/audit0/invariant=associatesType<>uml20\:\:kernel\:\:AssociatesTypeKind\:\:AGGREGATION
AuditsRegistry/auditSet0/audit35/tooltip=Java language keywords should not be used as a model elements names.
AuditsRegistry/auditSet0/audit36/language=ocl
AuditsRegistry/auditSet0/audit34/severity=severity.warning
AuditsRegistry/auditSet0/audit5/description=Avoid Multiplicities Involving Minimums and Maximums for n-ary associations
MetricsRegistry/auditSet0/metric18/invariant=getAllIncludedUseCases(Set{self})->size()
MetricsRegistry/auditSet0/metric20/context=uml20\:\:statemachines\:\:StateMachine
AuditsRegistry/auditSet0/audit31/language=ocl
AuditsRegistry/auditSet0/audit28/name=ATEDMHG
AuditsRegistry/auditSet0/audit12/invariant=(not Set{'0','1','0..1',''}->includes(clientCardinality) and not clientRole.oclIsUndefined() \nimplies clientRole.substring(clientRole.size(),clientRole.size())\='s')and(not Set{'0','1','0..1',''}->includes(supplierCardinality) and not supplierRole.oclIsUndefined() \nimplies supplierRole.substring(supplierRole.size(),supplierRole.size())\='s')
AuditsRegistry/auditSet0/audit43/context=uml20\:\:statemachines\:\:TransitionLink
MetricsRegistry/auditSet0/metric11/name=NOCIP
MetricsRegistry/auditSet0/metric0/context=uml20\:\:classes\:\:Class
AuditsRegistry/auditSet0/audit55/name=ACHATUCC
AuditsRegistry/auditSet0/audit55/description=Actor Can Have Associations To Use-Cases, Components and Classes. Furthermore these associations must be binary.
AuditsRegistry/auditSet0/audit53/enabled=true
MetricsRegistry/auditSet0/metric19/context=uml20\:\:usecases\:\:UseCase
AuditsRegistry/auditSet0/audit40/context=uml20\:\:statemachines\:\:PseudoState
AuditsRegistry/auditSet0/audit30/name=FSHOOET
AuditsRegistry/auditSet0/audit0/tooltip=In general, aggregation is not well defined and leads to \nconfusion in modeling.  Specifically, it is the hollow diamond \nweak aggregation that is to be discouraged, in preference to \nthe filled-in diamond strong aggregation element commonly \ncalled composition.\nFowler, 68
AuditsRegistry/auditSet0/audit50/enabled=true
MetricsRegistry/auditSet0/metric16/context=uml\:\:kernel\:\:packages\:\:Package
AuditsRegistry/auditSet0/audit6/description=Always Name Associations
AuditsRegistry/auditSet0/audit17/invariant=abstract implies \n ownedOperations->exists(o|o.abstract) and\n not ownedOperations->exists(c|c.stereotypes->includes('create') and \n  c.visibility\=uml\:\:kernel\:\:VisibilityKind\:\:PUBLIC)
AuditsRegistry/auditSet0/audit47/language=ocl
AuditsRegistry/auditSet0/audit39/context=uml20\:\:statemachines\:\:StateMachine
AuditsRegistry/auditSet0/audit0/description=Avoid (Weak) Aggregation, Favor Composition (Strong Aggregation)
AuditsRegistry/auditSet0/audit45/severity=severity.warning
AuditsRegistry/auditSet0/audit57/tooltip=A use case cannot include use cases that directly or indirectly include it. See UML2.0 Specification, 16.3.6
AuditsRegistry/auditSet0/audit49/enabled=true
AuditsRegistry/auditSet0/audit22/invariant=--this audit uses the defined OCL operations \n--uml20\:\:kernel\:\:Classifier\:\:allClassifierAncestors(p\:Set(uml20\:\:kernel\:\:Classifier))\:Set(uml20\:\:kernel\:\:Classifier) \n--and uml20\:\:kernel\:\:features\:\:Operation\:\:isIdentical(another\: uml20\:\:kernel\:\:features\:\:Operation) \: Boolean \nlet owningClass \= owner.oclAsType(uml20\:\:kernel\:\:Classifier) in \nowningClass.allClassifierAncestors(Set{owningClass})-> \nforAll(anc|anc.features->forAll(a|not(a.static and self.static \nand a.isIdentical(self))))
AuditsRegistry/auditSet0/audit54/tooltip=The Defining Feature of each slot should be a Structural Feature (directly or inherited) of a classifier instantiated by the instance specification that ownes this slot. \n UML2.0 Specification 7.3.22
AuditsRegistry/auditSet0/audit46/enabled=true
MetricsRegistry/auditSet0/metric3/enabled=true
AuditsRegistry/auditSet0/audit42/language=ocl
AuditsRegistry/auditSet0/audit40/severity=severity.warning
AuditsRegistry/auditSet0/audit56/description=UseCases can not have Associations to UseCases specifying the same subject
AuditsRegistry/auditSet0/audit15/name=AUIEAE
MetricsRegistry/auditSet0/metric0/enabled=true
AuditsRegistry/auditSet0/audit50/description=The visibility of all features owned by an interface must be public.
MetricsRegistry/auditSet0/metric19/enabled=true
MetricsRegistry/auditSet0/metric15/language=ocl
AuditsRegistry/auditSet0/audit67/name=AMRA
MetricsRegistry/auditSet0/metric8/invariant=associations->asSet()->union(allClassifierAncestors(Set{self}).associations)->asSet()->size()
